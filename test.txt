
src_dir="new_features"
dst_dir="features"
mkdir -p "$dst_dir"

find "$src_dir" -type f -regex '.*/[0-9]+\.feature' -exec stat -c '%s %n' {} + | sort -nr |
awk -v dst="$dst_dir" '
  BEGIN { idx = 1 }
  {
    size = $1
    $1 = ""; sub(/^ /, "")
    file = $0
    target = dst "/" idx ".feature"

    if (system("[ -f \"" target "\" ]") == 0) {
      cmd = "stat -c %s \"" target "\""
      cmd | getline existing_size
      close(cmd)
      if (existing_size == size) {
        print "Skipping identical: " target
        next
      }
    }
    print "Copying", file, "->", target
    system("cp \"" file "\" \"" target "\"")
    idx++
  }
'

find "$src_dir" -type f -name '*_*.feature' -exec stat -c '%s %n' {} + | sort -nr |
awk -v dst="$dst_dir" '
  function get_target(name, count) {
    if (count == 1) return dst "/" name
    split(name, parts, /\./)
    return dst "/" parts[1] "_" count "." parts[2]
  }

  {
    size = $1
    $1 = ""; sub(/^ /, "")
    file = $0
    name = file
    sub(/^.*\//, "", name)        # basename
    sub(/^[0-9]+_/, "", name)     # remove numeric prefix

    count[name]++
    target = get_target(name, count[name])

    if (system("[ -f \"" target "\" ]") == 0) {
      cmd = "stat -c %s \"" target "\""
      cmd | getline existing_size
      close(cmd)
      if (existing_size == size) {
        print "Skipping identical: " target
        next
      }
    }
    print "Copying", file, "->", target
    system("cp \"" file "\" \"" target "\"")
  }
'
